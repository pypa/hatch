[tool.ruff]
line-length = 120

# https://github.com/astral-sh/ruff/issues/8627
exclude = [".git", ".mypy_cache", ".ruff_cache", ".venv", "dist"]

[format]
preview = true
quote-style = "single"
docstring-code-format = true
docstring-code-line-length = 80

[lint]
preview = true
select = [
  "A001",
  "A002",
  "A003",
  "ARG001",
  "ARG002",
  "ARG003",
  "ARG004",
  "ARG005",
  "ASYNC100",
  "ASYNC101",
  "ASYNC102",
  "B",
  "BLE001",
  "C4",
  "COM818",
  "DTZ",
  "E",
  "EM101",
  "EM102",
  "EM103",
  "EXE",
  "F",
  "FA100",
  "FA102",
  "FBT001",
  "FBT002",
  "FLY002",
  "FURB",
  "G",
  "I001",
  "I002",
  "ICN001",
  "ICN002",
  "ICN003",
  "INP001",
  "INT001",
  "INT002",
  "INT003",
  "ISC003",
  "LOG001",
  "LOG002",
  "LOG007",
  "LOG009",
  "N",
  "PERF101",
  "PERF102",
  "PERF401",
  "PERF402",
  "PERF403",
  "PGH005",
  "PIE790",
  "PIE794",
  "PIE796",
  "PIE800",
  "PIE804",
  "PIE807",
  "PIE808",
  "PIE810",
  "PLC0105",
  "PLC0131",
  "PLC0132",
  "PLC0205",
  "PLC0208",
  "PLC0414",
  "PLC0415",
  "PLC1901",
  "PLC2401",
  "PLC2403",
  "PLC2701",
  "PLC2801",
  "PLC3002",
  "PLE",
  "PLR0124",
  "PLR0133",
  "PLR0202",
  "PLR0203",
  "PLR0206",
  "PLR0402",
  "PLR1701",
  "PLR1704",
  "PLR1711",
  "PLR1714",
  "PLR1722",
  "PLR1733",
  "PLR1736",
  "PLR2004",
  "PLR2044",
  "PLR5501",
  "PLR6201",
  "PLR6301",
  "PLW",
  "PT",
  "PYI",
  "RET",
  "RSE102",
  "RUF",
  "S",
  "SIM",
  "SLF001",
  "SLOT000",
  "SLOT001",
  "SLOT002",
  "T100",
  "T201",
  "T203",
  "TCH",
  "TD004",
  "TD005",
  "TD006",
  "TD007",
  "TID251",
  "TID252",
  "TID253",
  "TRIO",
  "TRY",
  "UP",
  "W291",
  "W292",
  "W293",
  "W505",
  "W605",
  "YTT",
]
ignore = [
  "B027",  # an empty method in an abstract base class, but has no abstract decorator
  # Allow lazy imports for responsive CLI
  "PLC0415",
  "FURB101",  # `open` and `read` should be replaced by
  "PT004",  # Fixture does not return anything, add leading underscore
  "S404",  # `subprocess` module is possibly insecure
  "S603",  # `subprocess` call - check for execution of untrusted input
  "SIM401",

]

[lint.flake8-tidy-imports]
ban-relative-imports = "all"

[lint.extend-per-file-ignores]
"backend/src/hatchling/bridge/app.py" = ["T201"]
"backend/tests/downstream/integrate.py" = ["INP001", "T201"]
"docs/.hooks/*" = ["INP001", "T201"]
"release/macos/build_pkg.py" = ["INP001"]
"**/scripts/*" = ["INP001", "T201"]
"**/tests/**/*" = ["PLC1901", "PLR2004", "PLR6301", "S", "TID252"]

[lint.isort]
known-first-party = ["hatch", "hatchling"]

[lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false